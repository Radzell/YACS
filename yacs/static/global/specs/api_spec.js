// Generated by CoffeeScript 1.3.1
(function() {

  describe('API', function() {
    var api;
    api = null;
    beforeEach(function() {
      api = new API('/api/4/');
      return this.addMatchers({
        toEqualTo: function(expected) {
          if (expected.equals != null) {
            return expected.equals(this.actual);
          } else if (this.actual.equals != null) {
            return this.actual.equals(expected);
          } else {
            return this.toEqual(expected);
          }
        }
      });
    });
    it('should fetch object without network problems', function() {
      spyOn($, 'ajax').andCallFake(function(options) {
        expect(options.url).toEqual('/api/4/semesters/1/');
        expect(options.cache).toBeTruthy();
        return options.success({
          version: 4,
          result: {
            name: "Spring Session 2012",
            year: 2012,
            date_updated: "2012-04-29T15:36:17.836592",
            ref: "http://sis.rpi.edu/reg/zs201201.htm",
            id: 1,
            month: 1
          },
          success: true
        });
      });
      return api.semesters((function(semester) {
        return expect(semester).toEqual(new API.Model({
          name: "Spring Session 2012",
          year: 2012,
          date_updated: "2012-04-29T15:36:17.836592",
          ref: "http://sis.rpi.edu/reg/zs201201.htm",
          id: 1,
          month: 1
        }));
      }), null, 1);
    });
    it('should fetch collection without network problems', function() {
      spyOn($, 'ajax').andCallFake(function(options) {
        expect(options.url).toEqual('/api/4/semesters/');
        expect(options.cache).toBeTruthy();
        return options.success({
          version: 4,
          success: true,
          result: [
            {
              name: "Fall Session 2012",
              year: 2012,
              date_updated: "2012-04-29T15:36:37.148566",
              ref: "http://sis.rpi.edu/reg/zs201209.htm",
              id: 8,
              month: 9
            }, {
              name: "Spring Session 2012",
              year: 2012,
              date_updated: "2012-04-29T15:36:17.836592",
              ref: "http://sis.rpi.edu/reg/zs201201.htm",
              id: 1,
              month: 1
            }
          ]
        });
      });
      return api.semesters(function(semesters) {
        return expect(semesters.to_array()).toEqual([
          new API.Model({
            name: "Fall Session 2012",
            year: 2012,
            date_updated: "2012-04-29T15:36:37.148566",
            ref: "http://sis.rpi.edu/reg/zs201209.htm",
            id: 8,
            month: 9
          }), new API.Model({
            name: "Spring Session 2012",
            year: 2012,
            date_updated: "2012-04-29T15:36:17.836592",
            ref: "http://sis.rpi.edu/reg/zs201201.htm",
            id: 1,
            month: 1
          })
        ]);
      });
    });
    it('should invoke error callback with bad request', function() {
      spyOn($, 'ajax').andCallFake(function(options) {
        return options.success({
          version: 4,
          result: "I don't know",
          success: false
        });
      });
      return api.semesters(null, function(data, e) {
        expect(e).toBeNull();
        return expect(data).toEqual({
          version: 4,
          result: "I don't know",
          success: false
        });
      });
    });
    return it('should invoke error callback with no network', function() {
      var exception;
      exception = jasmine.createSpy();
      spyOn($, 'ajax').andCallFake(function(options) {
        var status, xhr;
        xhr = jasmine.createSpy();
        status = 'test-error';
        return options.error(xhr, status, exception);
      });
      return api.semesters(null, function(data, e) {
        expect(data).toBeNull();
        return expect(e).toEqual(exception);
      });
    });
  });

}).call(this);
